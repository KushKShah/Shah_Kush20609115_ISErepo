m
# 20609115
# Kush Shah
#

Category 1:
    (a): Converting a given string to Upper Case or Lower Case
	Module: Main
        Inputs: Nothing
        Description: This Module Prints out what the code is meant to do and then Runs Module ReadInFileMenu.
        Export: Nothing

        Module: ReadInFileMenu
        Inputs: outputFileName(String) is passed through the Main module
        Description: This Module is used to ask the User if they want to Read in a file or they want to input a string.
                        If yes the system asks the user to input the file name.
                        Then CaseMenu is ran through.
        Export: Nothing

        Module: CaseMenu
        Inputs: inputStatus(String), inputFileName(String), outputFileName(String) is passed through the ReadInFileMenu module
        Description: This Module is used to ask the user if they want to change the string to upper case or lower case.
                        Once the user inputs a valid input the Module runs according to the inputStatus(reading file is yes or no).
                        If reading file is yes then it runs the ReadFile Module, but if it is no the Module asks the user to input the string they want to change the case of.
                        Once this is done the Final String is sent to the Upper or Lower Modules depending on User request.
        Export: Nothing

        Module: ReadFile
        Inputs: inputFileName(String), outputFileName(String) are passed in through CaseMenu Module
        Description: This Module is used to read in the file that the user tells the system to read in ReadInFileMenu Module.
                        The Module saves line by line to the String fileInput then once the reading of the file is complete the Module returns the String fileInput.
        Exports: fileInput(String)

        Module: WriteToFile
        Inputs: outputFileName(String), finalString(String) is passed in from Modules Upper or Lower
        Description: This Module is used to Write out the results to the results file.
        Exports: Nothing

        Module: Upper
        Inputs: outputFileName(String), inputString(String) is passed in through the CaseMenu Module
        Description: This Module is used to turn the String to Upper case and then send the finalString to the WriteToFile Module.
        Exports: Nothing

        Module: Lower
        Inputs: outputFileName(String), inputString(String) is passed in through the CaseMenu Module
        Description: This Module is used to turn the String to Lower case and then send the finalString to the WriteToFile Module.
        Exports: Nothing

    (b): Identify whether numeric values are in a give string
	Module: Main
        Inputs: Nothing
        Description: This Module Prints out what the code is meant to do and then Runs Module ReadInFileMenu.
        Export: Nothing

        Module: ReadInFileMenu
        Inputs: outputFileName(String) is passed through the Main module
        Description: This Module is used to ask the User if they want to Read in a file or they want to input a string.
                        If yes the system asks the user to input the file name. Then ReadFile Module is ran through.
        Export: Nothing

        Module: NoMenu
        Inputs: outputFileName(String) is passed in through the ReadInFileMenu Module
        Description: This Module is used to Ask the User to input a string to identify if it has a number in it or not.
                        Used only if User says no in the ReadInFileMenu Module.
                        Once the User inputs a String the CheckForNum Module is ran.
                        The finalString is sent to be written to the output file through WriteToFile Module.
        Exports: Nothing

        Module: ReadFile
        Inputs: inputFileName(String), outputFileName(String) are passed in through ReadInFileMenu Module
        Description: This Module is used to read in the file that the user tells the system to read in ReadInFileMenu Module.
                        The Module runs CheckForNum Module For each line and stores the result as finalString.
                        At the End the of the Module the finalString is sent to be written in to the output file through WriteToFile Module.
        Exports: Nothing

        Module: WriteToFile
        Inputs: outputFileName(String), finalString(String) is passed in from Module ReadFile or NoMenu Module
        Description: This Module is used to Write out the results to the results file.
        Exports: Nothing

        Module: CheckForNum
        Inputs: inputString(String) is passed in from Modules ReadFile or NoMenu
        Description: This Module is used to Check if the given String has a Number in the String and Prints out if it does or does not.
                        This module also saves the outcome to the finalString variable which is exported.
        Exports: finalString(String)

    (c): Identify whether a given string is a valid number or not
	Module: Main
        Inputs: Nothing
        Description: This Module Prints out what the code is meant to do and then Runs Module ReadInFileMenu.
        Export: Nothing

        Module: ReadInFileMenu
        Inputs: outputFileName(String) is passed through the Main module
        Description: This Module is used to ask the User if they want to Read in a file or they want to input a value.
                        If yes the system asks the user to input the file name. Then ReadFile Module is ran through.
        Export: Nothing

        Module: NoMenu
        Inputs: outputFileName(String) is passed in through the ReadInFileMenu Module
        Description: This Module is used to Ask the User to input a value to identify if it is a valid Number.
                        Used only if User says no in the ReadInFileMenu Module.
                        Once the User inputs a value the CheckForValidNumber Module is ran.
                        The finalValue is sent to be written to the output file through WriteToFile Module.
        Exports: Nothing

        Module: ReadFile
        Inputs: inputFileName(String), outputFileName(String) are passed in through ReadInFileMenu Module
        Description: This Module is used to read in the file that the user tells the system to read in ReadInFileMenu Module.
                        The Module runs CheckForValidNumber Module For each line and stores the result as finalValue.
                        At the End the of the Module the finalValue is sent to be written in to the output file through WriteToFile Module.
        Exports: Nothing

        Module: WriteToFile
        Inputs: outputFileName(String), finalValue(String) is passed in from Module ReadFile or NoMenu Module
        Description: This Module is used to Write out the results to the results file.
        Exports: Nothing

        Module: CheckForValidNumber
        Inputs: inputString(String) is passed in from Modules ReadFile or NoMenu
        Description: This Module is used to Check if the given Value is a Valid Number and Prints out if it is or is not.
                        This module also saves the outcome to the finalValue variable which is exported.
        Exports: finalValue(String)

    (d): Remove any numeric values in a give string and then convert the string to Upper Case or Lower Case
	Module: Main
        Inputs: Nothing
        Description: This Module Prints out what the code is meant to do and then Runs Module ReadInFileMenu.
        Export: Nothing

        Module: ReadInFileMenu
        Inputs: outputFileName(String) is passed through the Main module
        Description: This Module is used to ask the User if they want to Read in a file or they want to input a string.
                        If yes the system asks the User to input the file name. Then ReadFile Module is ran through.
                        If No the system asks the User to input the string they want to remove numbers from and then RemoveNum Module is ran.
                        Afterwards the RemovedNumString is sent to the CaseMenu Module.
        Export: Nothing

        Module: CaseMenu
        Inputs: outputFileName(String), RemovedNumString(String) is passed through the ReadInFileMenu module
        Description: This Module is used to ask the user if they want to change the string to upper case or lower case.
                        The RemovedNumString is sent to the Upper or Lower Modules depending on User request.
        Export: Nothing

        Module: ReadFile
        Inputs: inputFileName(String) is passed in through ReadInFileMenu Module
        Description: This Module is used to read in the file that the user tells the system to read in ReadInFileMenu Module.
                        The Module runs RemoveNum Module For each line and stores the result as RemovedNumString.
                        At the End the of the Module the RemovedNumString is Exported.
        Exports: RemovedNumString(String)

        Module: RemoveNum
        Inputs: inputString(String) is passed in through the ReadInFileMenu Module
        Description: This Module is used to remove the numbers from the String and save it as result.
        Exports: result(String)

        Module: WriteToFile
        Inputs: outputFileName(String), finalString(String) is passed in from Upper or Lower Module
        Description: This Module is used to Write out the results to the results file.
        Exports: Nothing

        Module: Upper
        Inputs: outputFileName(String), inputString(String) is passed in through the CaseMenu Module
        Description: This Module is used to turn the String to Upper case and then send the finalString to the WriteToFile Module.
        Exports: Nothing

        Module: Lower
        Inputs: outputFileName(String), inputString(String) is passed in through the CaseMenu Module
        Description: This Module is used to turn the String to Lower case and then send the finalString to the WriteToFile Module.
        Exports: Nothing
	
Category 2:
    (c): Converting a number which represents a time given in hours to minutes and vice versa, and time given in minutes to seconds and vice versa.
        Module: Main
        Inputs: Nothing
        Description: This Module Prints out what the code is meant to do and then Runs Module ReadInFileMenu.
        Export: Nothing

        Module: ReadInFileMenu
        Inputs: outputFileName(String) is passed through the Main module
        Description: This Module is used to ask the User if they want to Read in a file or they want to input a value.
                        If yes the system asks the user to input the file name.
                        Then CaseMenu is ran through.
        Export: Nothing

        Module: CaseMenu
        Inputs: inputStatus(String), inputFileName(String), outputFileName(String) is passed in through ReadInFileMenu Module
        Description: This Module is used to ask the User if they want to change Hours to Minutes, Minutes to Hours, Minutes to Seconds or Seconds to Minutes.
                        Depending on inputStatus(yes or no) from ReadInFileMenu Cases are ran accordingly.
                        If inputStatus is yes ReadFile Module is ran (doesn't matter what is being converted).
                        If inputStatus is no the system asks the user to input a number which is sent to the Module depending on what the user wants to convert from and to.  
                        Then finalString is sent to be written to results file through WriteToFile Module.
        Exports: Nothing

        Module: ReadFile
        Inputs: inputFileName(String), choice(String) is passed in through CaseMenu Module
        Description: This Module is used to read in the file that the user tells the system to read in CaseMenu Module.
                        The Module runs Convert Modules depending on choice, this is done for each line and stores the result as finalString.
                        At the End the of the Module the finalString is Exported.
        Exports: finalString(String)

        Module: WriteToFile
        Inputs: outputFileName(String), finalString(String) is passed in from Upper or Lower Module
        Description: This Module is used to Write out the results to the results file.
        Exports: Nothing

        Module: ConvertHoursToMinutes
        Inputs: value(String) is passed in through ReadFile or CaseMenu Modules
        Description: This Module is used to convert Time in Hours to Minutes.
                        The Module changes the String value to Double finalValue by running StringToDouble Module.
                        The finalValue is Multiplied by 60 and then the finalValue is set to two decimal places using TwoDecimalPlaces Module.
                        If the value is invalid hence has a letter in it or has a space in the value the value is returned as 0 with an Invalid Value String.
                        Then the finalString is exported out.
        Exports: finalString(String)

        Module: ConvertMinutesToHours
        Inputs: value(String) is passed in through ReadFile or CaseMenu Modules
        Description: This Module is used to convert Time in Minutes to Hours.
                        The Module changes the String value to Double finalValue by running StringToDouble Module.
                        The finalValue is Divided by 60 and then the finalValue is set to two decimal places using TwoDecimalPlaces Module.
                        If the value is invalid hence has a letter in it or has a space in the value the value is returned as 0 with an Invalid Value String.
                        Then the finalString is exported out.
        Exports: finalString(String)

        Module: ConvertMinutesToSeconds
        Inputs: value(String) is passed in through ReadFile or CaseMenu Modules
        Description: This Module is used to convert Time in Minutes to Seconds.
                        The Module changes the String value to Double finalValue by running StringToDouble Module.
                        The finalValue is Multiplied by 60 and then the finalValue is set to two decimal places using TwoDecimalPlaces Module.
                        If the value is invalid hence has a letter in it or has a space in the value the value is returned as 0 with an Invalid Value String.
                        Then the finalString is exported out.
        Exports: finalString(String)

        Module: ConvertSecondsToMinutes
        Inputs: value(String) is passed in through ReadFile or CaseMenu Modules
        Description: This Module is used to convert Time in Seconds to Minutes.
                        The Module changes the String value to Double finalValue by running StringToDouble Module.
                        The finalValue is Divided by 60 and then the finalValue is set to two decimal places using TwoDecimalPlaces Module.
                        If the value is invalid hence has a letter in it or has a space in the value the value is returned as 0 with an Invalid Value String.
                        Then the finalString is exported out.
        Exports: finalString(String)

        Module: StringToDouble
        Inputs: value(String) is passed in through Convert Modules
        Description: This Module is used to convert a String to a Double.
                        Then the conversion is exported out.
        Exports: conversion(String)

        Module: TwoDecimalPlaces
        Inputs: finalValue(Double) is passed in through Convert Modules.
        Description: This Module is used to convert a multiple decimal places value to two decimal places.
                        Which is given as a stringValue and is exported out.
        Exports: stringValue(String)
